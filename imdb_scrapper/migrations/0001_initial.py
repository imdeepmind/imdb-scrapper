# Generated by Django 4.2.18 on 2025-01-21 16:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('release_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1888), django.core.validators.MaxValueValidator(2100)])),
                ('rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('plot', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-release_year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='imdb_scrapp_name_790de4_idx')],
            },
        ),
        migrations.CreateModel(
            name='MovieWriter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_scrapper.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_scrapper.person')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('movie', 'person')},
            },
        ),
        migrations.CreateModel(
            name='MovieStar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('character_name', models.CharField(blank=True, max_length=255)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_scrapper.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_scrapper.person')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('movie', 'person')},
            },
        ),
        migrations.CreateModel(
            name='MovieDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_scrapper.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_scrapper.person')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('movie', 'person')},
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='directors',
            field=models.ManyToManyField(related_name='directed_movies', through='imdb_scrapper.MovieDirector', to='imdb_scrapper.person'),
        ),
        migrations.AddField(
            model_name='movie',
            name='stars',
            field=models.ManyToManyField(related_name='starred_movies', through='imdb_scrapper.MovieStar', to='imdb_scrapper.person'),
        ),
        migrations.AddField(
            model_name='movie',
            name='writers',
            field=models.ManyToManyField(related_name='written_movies', through='imdb_scrapper.MovieWriter', to='imdb_scrapper.person'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['title'], name='imdb_scrapp_title_cfc12e_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['release_year'], name='imdb_scrapp_release_8aceeb_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['rating'], name='imdb_scrapp_rating_15e84c_idx'),
        ),
    ]
